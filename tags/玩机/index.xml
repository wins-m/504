<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>玩机 on WM&#39;s Blog</title>
    <link>http://localhost:1313/tags/%E7%8E%A9%E6%9C%BA/</link>
    <description>Recent content in 玩机 on WM&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Aug 2024 13:02:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E7%8E%A9%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用软路由、cf、反代、frp等建立个人/家庭网络</title>
      <link>http://localhost:1313/collections/2024/%E4%BD%BF%E7%94%A8%E8%BD%AF%E8%B7%AF%E7%94%B1cf%E5%8F%8D%E4%BB%A3frp%E7%AD%89%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 18 Aug 2024 13:02:00 +0800</pubDate>
      <guid>http://localhost:1313/collections/2024/%E4%BD%BF%E7%94%A8%E8%BD%AF%E8%B7%AF%E7%94%B1cf%E5%8F%8D%E4%BB%A3frp%E7%AD%89%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://bbs.pku.edu.cn/v2/post-read.php?bid=35&amp;amp;threadid=18825472&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;原文&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;写在前面&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;​    自从购入了某双网口小主机用作软路由后，lz一发不可收拾，在家陆续搭建了个人服务器以及其上搭载的各类服务，包括但不限于jellyfin(影音流媒体)，next_terminal(堡垒机与远程连接管理和共享),lms(音乐播放器)，alist(网盘管理)，kodbox(可道云，云文件管理)，qbit(bt下载),jupyter(代码管理和共享),bitwarden(密码管理),frpc(内网穿透)等。&lt;/p&gt;&#xA;&lt;p&gt;​    众所周知，国内是很难获取公网ip的，对于建站等需备案的服务要求也极其严格，以上也是曾经很大程度劝退lz折腾这些的因素。但经研究发现，利用恰当的工具及配置，是很容易绕开所有的限制的，因此本文也主要是分享这个模式，希望能够对大家有所启发和帮助，也欢迎大家多多交流。&lt;/p&gt;&#xA;&lt;p&gt;​    最终我们期望达成的效果为，使用同一个域名，在局域网外可以正常访问局域网内的服务（但可能速度较慢，因为是有cf的代理），在局域网内也可以使用该域名正常访问同一个服务，但走的路径是局域网内直连，而非出局域网走cf的代理再绕回来。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;需要准备的材料&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;​    1.1 一个域名，最好长期使用，并解析到cf（必备）。注：cf即cloudflare，可以白嫖众多服务，大家都亲切地称呼其为大善人，后文中大家可以发现其发挥着无法替代的作用，也是本操作的核心。当然享受这一切的前提是需要有域名解析进去。建议大家在海外的域名平台上购买域名，一是长期使用价格一般比国内低，二是海外对建站这些事没这么敏感，不需要到处搞身份验证备案什么的，相对轻松些。毕竟我们所有的服务也都自己用，并不打算在国内备案。&lt;/p&gt;&#xA;&lt;p&gt;​    1.2 至少一台linux服务器（必备）。作为我们所需要的服务所搭建的平台，如果有一定linux/docker基础，应该可以发现在linux架构下搭建和管理自己的服务端省时省心。毕竟管理服务端完全用不到图形化桌面。&lt;/p&gt;&#xA;&lt;p&gt;​    1.3 软路由（必备，或可替换为具备dns反代功能的路由器，常开）。软路由一般也为linux服务器，使用软路由可以极大丰富我们对网络的操控和管理。必备软路由的原因是需要将我们的域名在内网解析至反向代理服务端。&lt;/p&gt;&#xA;&lt;p&gt;​    1.4 内网反向代理服务端（必备，常开）。该服务端必须常年运行，作用为在内网将子域名分发至各个服务。&lt;/p&gt;&#xA;&lt;p&gt;​    1.2-1.4所提到的机子可以是同一台，这也是大家常提到的AIO(All In One)，不过操作不当可能会变成AIB(All In Boom)，所有东西一起挂掉，希望大家谨慎&lt;/p&gt;&#xA;&lt;p&gt;2.操作步骤&lt;/p&gt;&#xA;&lt;p&gt;​    2.1 使用cf的Tunnels功能进行服务端内网穿透&lt;/p&gt;&#xA;&lt;p&gt;​    该步骤目的是能够使内网服务端在公网进行访问，具体操作步骤为：&lt;/p&gt;&#xA;&lt;p&gt;​    2.1.1 在内网某台机子上建立隧道客户端：&lt;/p&gt;&#xA;&lt;p&gt;​    登录cf，左侧边栏单击选择Zero Trust，进入后左侧边栏单击Networks下三角，进一步弹出的选项里单击选择Tunnels，界面点击Create a tunnel，根据cf提供的步骤在自己的服务端/软路由/win客户端/其他设备上建立隧道，这个建立隧道的设备需要满足的要求是：能够在内网访问所有需要访问的服务，且在外网访问内网服务时，这个设备需满足开启且在运行cf Tunnel程序的状态。&lt;/p&gt;&#xA;&lt;p&gt;​    2.1.2 为某一个需要公网访问的服务建立隧道：&lt;/p&gt;&#xA;&lt;p&gt;​    建好隧道后，该页面点击对应的Tunnel name，在右边弹出栏中选择edit，弹出界面上方选择Public Hostname，页面切换后点击Add a public hostname，弹出界面中，Subdomain为子域名，Domain选择解析到cf的域名，Path留空。下方Type选http，URL填写内网访问该服务的IP地址及端口。或者说，在内网访问该服务时地址栏写啥这里就写啥。填完后右下角Save Hostname&lt;/p&gt;&#xA;&lt;p&gt;​    做完这一步之后，这一个服务应该就可以用你的域名在公网进行访问了，一般国内的延迟在200ms左右，大家可以进行测试。&lt;/p&gt;&#xA;&lt;p&gt;​    2.1.3 重复2.1.2的步骤，为所有的服务搭建隧道&lt;/p&gt;&#xA;&lt;p&gt;​    2.2 使用内网反向代理服务端，配合软路由，将域名解析至内网ip和端口&lt;/p&gt;&#xA;&lt;p&gt;​    经过以上操作后，我们在局域网外应该是能正常使用域名访问我们的服务了，在局域网内也可以正常访问，但是相比局域网内ip+端口的模式会慢不少，因为流量实际上是走cf绕了一圈回来。因此采用软路由dns反向代理解析域名至内网反代服务端+内网反代服务端反向代理解析子域名至对应的服务上，这一思路可以使我们用同一个域名在内网走内网链路访问服务。&lt;/p&gt;&#xA;&lt;p&gt;​    2.2.1 软路由dns反向代理解析域名至内网反代服务端&lt;/p&gt;&#xA;&lt;p&gt;​    软路由系统lz选择ikuai，主要因为配置简单+功能丰富。Ikuai环境下操作步骤为：网络设置-DNS设置-DNS设置-开启DNS加速服务-开启强制客户端DNS代理-最下方添加DNS反向代理。域名为*.+你解析到cf的域名，解析类型ipv4，解析地址为内网反代服务端的IP地址。&lt;/p&gt;&#xA;&lt;p&gt;​    2.2.2 内网反代服务端反向代理解析子域名至对应的服务上&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
